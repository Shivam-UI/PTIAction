{"version":3,"file":"index.min.js","sources":["../../src/utils.ts","../../src/editor/ContentEditable.tsx","../../src/editor/EditorContext.tsx","../../src/editor/HtmlEditor.tsx","../../node_modules/rollup-plugin-styles/dist/runtime/inject-css.js","../../src/editor/Editor.tsx","../../src/toolbar/buttons.tsx","../../src/toolbar/icons/UnorderedListIcon.tsx","../../src/toolbar/icons/OrderedListIcon.tsx","../../src/toolbar/dropdowns.tsx","../../src/toolbar/HtmlButton.tsx","../../src/toolbar/Separator.tsx","../../src/toolbar/Toolbar.tsx","../../src/editor/DefaultEditor.tsx"],"sourcesContent":["export function getSelectedNode(): Node {\n  if ((document as any).selection) {\n    return (document as any).selection.createRange().parentElement();\n  }\n\n  const selection = window.getSelection();\n  if (selection.rangeCount > 0) {\n    return selection.getRangeAt(0).startContainer.parentNode;\n  }\n\n  return null;\n}\n\nexport function normalizeHtml(str: string): string {\n  return str && str.replace(/&nbsp;|\\u202F|\\u00A0/g, ' ');\n}\n\nexport function replaceCaret(el: HTMLElement) {\n  // Place the caret at the end of the element\n  const target = document.createTextNode('');\n  el.appendChild(target);\n\n  // do not move caret if element was not focused\n  const isTargetFocused = document.activeElement === el;\n  if (target !== null && target.nodeValue !== null && isTargetFocused) {\n    const sel = window.getSelection();\n    if (sel !== null) {\n      const range = document.createRange();\n      range.setStart(target, target.nodeValue.length);\n      range.collapse(true);\n      sel.removeAllRanges();\n      sel.addRange(range);\n    }\n    if (el instanceof HTMLElement) el.focus();\n  }\n}\n","/* eslint-disable react/prop-types */\n\nimport {\n  createElement,\n  ForwardedRef,\n  forwardRef,\n  HTMLAttributes,\n  memo,\n  SyntheticEvent,\n  useEffect,\n  useMemo,\n  useRef,\n} from 'react';\nimport { normalizeHtml, replaceCaret } from '../utils';\n\n/**\n * Based on https://github.com/lovasoa/react-contenteditable\n * A simple component for an html element with editable contents.\n */\nexport const ContentEditable = memo(\n  forwardRef(function ContentEditable(\n    {\n      className,\n      disabled,\n      onBlur,\n      onKeyDown,\n      onKeyUp,\n      tagName,\n      value,\n      ...rest\n    }: ContentEditableProps,\n    ref: ForwardedRef<HTMLElement>,\n  ) {\n    const elRef = useRef<HTMLElement>();\n    const htmlRef = useRef(value);\n\n    useEffect(() => {\n      const el = elRef.current;\n      if (el && normalizeHtml(htmlRef.current) !== normalizeHtml(value)) {\n        htmlRef.current = value;\n        el.innerHTML = value;\n        replaceCaret(el);\n      }\n    });\n\n    return useMemo(() => {\n      function onSetRef($el: HTMLElement) {\n        elRef.current = $el;\n        if (typeof ref === 'function') {\n          ref($el);\n        } else if (typeof ref === 'object') {\n          // eslint-disable-next-line no-param-reassign\n          ref.current = $el;\n        }\n      }\n\n      function onChange(event: SyntheticEvent<any>) {\n        const el = elRef.current;\n        if (!el) {\n          return;\n        }\n\n        const elementHtml = el.innerHTML;\n        if (elementHtml !== htmlRef.current) {\n          rest.onChange?.({\n            ...event,\n            target: {\n              value: elementHtml,\n              name: rest.name,\n            } as any,\n          });\n        }\n\n        htmlRef.current = elementHtml;\n      }\n\n      return createElement(tagName || 'div', {\n        ...rest,\n        className,\n        contentEditable: !disabled,\n        dangerouslySetInnerHTML: { __html: value },\n        onBlur: onBlur || onChange,\n        onInput: onChange,\n        onKeyDown: onKeyDown || onChange,\n        onKeyUp: onKeyUp || onChange,\n        ref: onSetRef,\n      });\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [className, disabled, onBlur, onKeyDown, onKeyUp, tagName]);\n  }),\n);\n\nexport type ContentEditableEvent = SyntheticEvent<any, Event> & {\n  target: { name?: string; value: string };\n};\n\nexport interface ContentEditableProps extends HTMLAttributes<HTMLElement> {\n  disabled?: boolean;\n  contentEditableRef?: (el: HTMLElement) => void;\n  name?: string;\n  onChange?: (event: ContentEditableEvent) => void;\n  tagName?: string;\n  value?: string;\n}\n","import * as React from 'react';\nimport { createContext, ReactNode, useContext, useState } from 'react';\n\nexport const EditorContext = createContext<EditorState>(null);\n\nexport function EditorProvider({ children }: { children: ReactNode }) {\n  const [state, setState] = useState<EditorState>({\n    htmlMode: false,\n    update,\n  });\n\n  function update(attrs) {\n    setState((prevState) => {\n      return {\n        ...prevState,\n        ...attrs,\n        date: Date.now(),\n      };\n    });\n  }\n\n  return (\n    <EditorContext.Provider value={state}>{children}</EditorContext.Provider>\n  );\n}\n\nexport function useEditorState(): EditorState {\n  return useContext(EditorContext);\n}\n\nexport interface EditorState {\n  update(attrs: Partial<EditorState>): void;\n  $el?: HTMLElement;\n  $selection?: Node;\n  htmlMode: boolean;\n}\n","import * as React from 'react';\n\nexport function HtmlEditor({ ...rest }) {\n  return <textarea {...rest} />;\n}\n","var e=[],t=[];function n(n,r){if(n&&\"undefined\"!=typeof document){var a,s=!0===r.prepend?\"prepend\":\"append\",d=!0===r.singleTag,i=\"string\"==typeof r.container?document.querySelector(r.container):document.getElementsByTagName(\"head\")[0];if(d){var u=e.indexOf(i);-1===u&&(u=e.push(i)-1,t[u]={}),a=t[u]&&t[u][s]?t[u][s]:t[u][s]=c()}else a=c();65279===n.charCodeAt(0)&&(n=n.substring(1)),a.styleSheet?a.styleSheet.cssText+=n:a.appendChild(document.createTextNode(n))}function c(){var e=document.createElement(\"style\");if(e.setAttribute(\"type\",\"text/css\"),r.attributes)for(var t=Object.keys(r.attributes),n=0;n<t.length;n++)e.setAttribute(t[n],r.attributes[t[n]]);var a=\"prepend\"===s?\"afterbegin\":\"beforeend\";return i.insertAdjacentElement(a,e),e}}export{n as default};\n","import * as React from 'react';\nimport { SyntheticEvent, useEffect } from 'react';\nimport { getSelectedNode } from '../utils';\nimport { ContentEditable, ContentEditableProps } from './ContentEditable';\nimport { useEditorState } from './EditorContext';\nimport { HtmlEditor } from './HtmlEditor';\nimport '../styles.css';\n\nexport function Editor({ children, onSelect, ...rest }: EditorProps) {\n  const editorState = useEditorState();\n\n  useEffect(() => {\n    document.addEventListener('click', onClickOutside);\n    return () => document.removeEventListener('click', onClickOutside);\n  });\n\n  function onClickOutside(event: MouseEvent) {\n    if (event.target === editorState.$el) {\n      return;\n    }\n\n    if (editorState.$el?.contains(event.target as HTMLElement)) {\n      return;\n    }\n\n    editorState.update({ $selection: null });\n  }\n\n  function onTextSelect(event: SyntheticEvent<HTMLElement>) {\n    onSelect?.(event);\n    editorState.update({ $selection: getSelectedNode() });\n  }\n\n  function setContentEditableRef($el: HTMLElement) {\n    editorState.update({ $el });\n  }\n\n  if (editorState.htmlMode) {\n    return (\n      <div className=\"rsw-editor\">\n        {children}\n        <HtmlEditor {...rest} className=\"rsw-ce rsw-html\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"rsw-editor\">\n      {children}\n      <ContentEditable\n        {...rest}\n        ref={setContentEditableRef}\n        onSelect={onTextSelect}\n        className=\"rsw-ce\"\n      />\n    </div>\n  );\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface EditorProps extends ContentEditableProps {}\n","import * as React from 'react';\nimport { HTMLAttributes, ReactNode } from 'react';\nimport { EditorState, useEditorState } from '../editor/EditorContext';\nimport OrderedListIcon from './icons/OrderedListIcon';\nimport UnorderedListIcon from './icons/UnorderedListIcon';\n\nexport const BtnBold = createButton('Bold', 'ùêÅ', 'bold');\n\nexport const BtnBulletList = createButton(\n  'Bullet list',\n  <UnorderedListIcon />,\n  'insertUnorderedList',\n);\n\nexport const BtnClearFormatting = createButton(\n  'Clear formatting',\n  'TÃ≤‚Çì',\n  'removeFormat',\n);\n\nexport const BtnItalic = createButton('Italic', 'ùë∞', 'italic');\n\nexport const BtnLink = createButton('Link', 'üîó', ({ $selection }) => {\n  if ($selection?.nodeName === 'A') {\n    document.execCommand('unlink');\n  } else {\n    // eslint-disable-next-line no-alert\n    document.execCommand('createLink', false, prompt('URL', ''));\n  }\n});\n\nexport const BtnNumberedList = createButton(\n  'Numbered list',\n  <OrderedListIcon />,\n  'insertOrderedList',\n);\n\nexport const BtnRedo = createButton('Redo', '‚Ü∑', 'redo');\n\nexport const BtnUnderline = createButton(\n  'Underline',\n  <span style={{ textDecoration: 'underline' }}>ùêî</span>,\n  'underline',\n);\n\nexport const BtnUndo = createButton('Undo', '‚Ü∂', 'undo');\n\nfunction createButton(\n  title: string,\n  content: ReactNode,\n  command: ((state: EditorState) => void) | string,\n) {\n  ButtonFactory.displayName = title.replace(/\\s/g, '');\n\n  return ButtonFactory;\n\n  function ButtonFactory(props: HTMLAttributes<HTMLButtonElement>) {\n    const editorState = useEditorState();\n    const { $selection } = editorState;\n\n    let active = false;\n    if (typeof command === 'string') {\n      active = !!$selection && document.queryCommandState(command);\n    }\n\n    function onAction() {\n      if (typeof command === 'function') {\n        command(editorState);\n      } else {\n        document.execCommand(command);\n      }\n    }\n\n    if (editorState.htmlMode) {\n      return null;\n    }\n\n    return (\n      <button\n        type=\"button\"\n        title={title}\n        {...props}\n        className=\"rsw-btn\"\n        onMouseDown={onAction}\n        data-active={active}\n      >\n        {content}\n      </button>\n    );\n  }\n}\n","import * as React from 'react';\n\nexport default function UnorderedListIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 24 24\"\n      style={{ verticalAlign: 'text-top' }}\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M7 5h14v2H7V5zm0 8v-2h14v2H7zM4 4.50001c.83 0 1.5.66992 1.5 1.5 0 .83007-.67 1.5-1.5 1.5s-1.5-.66993-1.5-1.5c0-.83008.67-1.5 1.5-1.5zM4 10.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5-1.5-.67-1.5-1.5.67-1.5 1.5-1.5zM7 19v-2h14v2H7zm-3-2.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5-1.5-.67-1.5-1.5.67-1.5 1.5-1.5z\"\n      />\n    </svg>\n  );\n}\n","import * as React from 'react';\n\nexport default function OrderedListIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 24 24\"\n      style={{ verticalAlign: 'text-top' }}\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M6.99938 12.998v-2H20.9994v2H6.99938zm0 6.0001v-2H20.9994v2H6.99938zm0-12.00001v-2H20.9994v2H6.99938zm-4 1v-3h-1v-1h2v4h-1zm-1 9.00001v-1h3v4h-3v-1h2v-.5h-1v-1h1v-.5h-2zM4.25 10c.41421 0 .75.3358.75.75 0 .2024-.08017.3861-.2105.521L3.11983 13H5v1H2v-.9218L4 11H2v-1h2.25z\"\n      />\n    </svg>\n  );\n}\n","import * as React from 'react';\nimport { ChangeEvent, HTMLAttributes } from 'react';\nimport { EditorState, useEditorState } from '../editor/EditorContext';\n\nexport const BtnStyles = createDropdown('Styles', [\n  ['Normal', 'formatBlock', 'DIV'],\n  ['ùóõùó≤ùóÆùó±ùó≤ùóø ùü≠', 'formatBlock', 'H1'],\n  ['Header 2', 'formatBlock', 'H2'],\n  ['ùô≤ùöòùöçùöé', 'formatBlock', 'PRE'],\n]);\n\nfunction createDropdown(title: string, items: DropDownItem[]): typeof Dropdown {\n  DropdownFactory.displayName = title;\n\n  return DropdownFactory;\n\n  function DropdownFactory(props: DropdownProps) {\n    const editorState = useEditorState();\n\n    if (editorState.htmlMode) {\n      return null;\n    }\n\n    return (\n      <Dropdown {...props} onChange={onChange} title={title} items={items} />\n    );\n\n    function onChange(e: ChangeEvent<HTMLSelectElement>) {\n      const selected = parseInt(e.target.value, 10);\n      const [, command, commandArgument] = items[selected];\n\n      e.preventDefault();\n      e.target.selectedIndex = 0;\n\n      if (typeof command === 'function') {\n        command(editorState);\n      } else {\n        document.execCommand(command, false, commandArgument);\n      }\n    }\n  }\n}\n\nexport function Dropdown({ items, selected, ...inputProps }: DropdownProps) {\n  return (\n    <select {...inputProps} value={selected} className=\"rsw-dd\">\n      <option hidden>{inputProps.title}</option>\n      {items.map((item, index) => (\n        <option key={item[2]} value={index}>\n          {item[0]}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nexport type DropDownItem = [\n  string,\n  string | ((editorState: EditorState) => void),\n  string,\n];\n\nexport interface DropdownProps extends HTMLAttributes<HTMLSelectElement> {\n  selected?: number;\n  items?: DropDownItem[];\n}\n","import * as React from 'react';\nimport { useEditorState } from '../editor/EditorContext';\n\nexport function HtmlButton({ ...rest }) {\n  const editorState = useEditorState();\n\n  function onClick() {\n    editorState.update({\n      htmlMode: !editorState.htmlMode,\n    });\n  }\n\n  return (\n    <button\n      type=\"button\"\n      title=\"HTML mode\"\n      className=\"rsw-btn\"\n      onClick={onClick}\n      data-active={editorState.htmlMode}\n      {...rest}\n    >\n      &lt;/&gt;\n    </button>\n  );\n}\n","import * as React from 'react';\nimport { useEditorState } from '../editor/EditorContext';\n\nexport function Separator() {\n  const editorState = useEditorState();\n\n  if (editorState.htmlMode) {\n    return null;\n  }\n\n  return <div className=\"rsw-separator\" />;\n}\n","import * as React from 'react';\nimport { HTMLAttributes } from 'react';\n\nexport function Toolbar(props: HTMLAttributes<HTMLDivElement>) {\n  return <div {...props} className=\"rsw-toolbar\" />;\n}\n","import * as React from 'react';\nimport { Editor, EditorProps } from './Editor';\nimport { EditorProvider } from './EditorContext';\nimport {\n  BtnBold,\n  BtnBulletList,\n  BtnClearFormatting,\n  BtnItalic,\n  BtnLink,\n  BtnNumberedList,\n  BtnRedo,\n  BtnStyles,\n  BtnUnderline,\n  BtnUndo,\n  HtmlButton,\n  Separator,\n  Toolbar,\n} from '../toolbar';\n\nexport function DefaultEditor(props: EditorProps) {\n  return (\n    <EditorProvider>\n      <Editor {...props}>\n        <Toolbar>\n          <BtnUndo />\n          <BtnRedo />\n          <Separator />\n          <BtnBold />\n          <BtnItalic />\n          <BtnUnderline />\n          <Separator />\n          <BtnNumberedList />\n          <BtnBulletList />\n          <Separator />\n          <BtnLink />\n          <BtnClearFormatting />\n          <HtmlButton />\n          <Separator />\n          <BtnStyles />\n        </Toolbar>\n      </Editor>\n    </EditorProvider>\n  );\n}\n"],"names":["getSelectedNode","document","selection","createRange","parentElement","window","getSelection","rangeCount","getRangeAt","startContainer","parentNode","normalizeHtml","str","replace","ContentEditable","memo","forwardRef","_a","ref","className","disabled","onBlur","onKeyDown","onKeyUp","tagName","value","rest","elRef","useRef","htmlRef","useEffect","el","current","innerHTML","target","createTextNode","appendChild","isTargetFocused","activeElement","nodeValue","sel","range","setStart","length","collapse","removeAllRanges","addRange","HTMLElement","focus","replaceCaret","useMemo","onChange","event","elementHtml","name","createElement","contentEditable","dangerouslySetInnerHTML","__html","onInput","$el","EditorContext","createContext","EditorProvider","children","_b","useState","htmlMode","update","attrs","setState","prevState","date","Date","now","state","React","Provider","useEditorState","useContext","HtmlEditor","e","t","Editor","onSelect","editorState","onClickOutside","contains","$selection","addEventListener","removeEventListener","n","r","a","s","prepend","d","singleTag","i","container","querySelector","getElementsByTagName","u","indexOf","push","c","charCodeAt","substring","styleSheet","cssText","setAttribute","attributes","Object","keys","insertAdjacentElement","BtnBold","createButton","BtnBulletList","xmlns","width","height","viewBox","style","verticalAlign","fill","BtnClearFormatting","BtnItalic","BtnLink","nodeName","execCommand","prompt","BtnNumberedList","BtnRedo","BtnUnderline","textDecoration","BtnUndo","title","content","command","ButtonFactory","displayName","props","active","queryCommandState","type","onMouseDown","BtnStyles","items","DropdownFactory","Dropdown","selected","parseInt","commandArgument","preventDefault","selectedIndex","createDropdown","inputProps","hidden","map","item","index","key","HtmlButton","onClick","Separator","Toolbar"],"mappings":"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"}