{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport invariant from 'invariant';\nimport uncontrollable from 'uncontrollable';\nimport chainFunction from './utils/createChainedFunction';\nimport ValidChildren from './utils/ValidComponentChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar propTypes = {\n  /**\n   * An HTML `<input>` name for each child button.\n   *\n   * __Required if `type` is set to `'radio'`__\n   */\n  name: PropTypes.string,\n\n  /**\n   * The value, or array of values, of the active (pressed) buttons\n   *\n   * @controllable onChange\n   */\n  value: PropTypes.any,\n\n  /**\n   * Callback fired when a button is pressed, depending on whether the `type`\n   * is `'radio'` or `'checkbox'`, `onChange` will be called with the value or\n   * array of active values\n   *\n   * @controllable values\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The input `type` of the rendered buttons, determines the toggle behavior\n   * of the buttons\n   */\n  type: PropTypes.oneOf(['checkbox', 'radio']).isRequired\n};\nvar defaultProps = {\n  type: 'radio'\n};\n\nvar ToggleButtonGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(ToggleButtonGroup, _React$Component);\n\n  function ToggleButtonGroup() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ToggleButtonGroup.prototype;\n\n  _proto.getValues = function getValues() {\n    var value = this.props.value;\n    return value == null ? [] : [].concat(value);\n  };\n\n  _proto.handleToggle = function handleToggle(value) {\n    var _this$props = this.props,\n        type = _this$props.type,\n        onChange = _this$props.onChange;\n    var values = this.getValues();\n    var isActive = values.indexOf(value) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive) {\n        onChange(value);\n      }\n\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== value;\n      }));\n    } else {\n      onChange(values.concat([value]));\n    }\n  };\n\n  _proto.render = function render() {\n    var _this = this;\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        type = _this$props2.type,\n        name = _this$props2.name,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"children\", \"type\", \"name\"]);\n\n    var values = this.getValues();\n    !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n    delete props.onChange;\n    delete props.value; // the data attribute is required b/c twbs css uses it in the selector\n\n    return React.createElement(ButtonGroup, _extends({}, props, {\n      \"data-toggle\": \"buttons\"\n    }), ValidChildren.map(children, function (child) {\n      var _child$props = child.props,\n          value = _child$props.value,\n          onChange = _child$props.onChange;\n\n      var handler = function handler() {\n        return _this.handleToggle(value);\n      };\n\n      return React.cloneElement(child, {\n        type: type,\n        name: child.name || name,\n        checked: values.indexOf(value) !== -1,\n        onChange: chainFunction(onChange, handler)\n      });\n    }));\n  };\n\n  return ToggleButtonGroup;\n}(React.Component);\n\nToggleButtonGroup.propTypes = propTypes;\nToggleButtonGroup.defaultProps = defaultProps;\nvar UncontrolledToggleButtonGroup = uncontrollable(ToggleButtonGroup, {\n  value: 'onChange'\n});\nUncontrolledToggleButtonGroup.Button = ToggleButton;\nexport default UncontrolledToggleButtonGroup;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_inheritsLoose","PropTypes","React","invariant","uncontrollable","chainFunction","ValidChildren","ButtonGroup","ToggleButton","propTypes","name","string","value","any","onChange","func","type","oneOf","isRequired","defaultProps","ToggleButtonGroup","_React$Component","apply","arguments","_proto","prototype","getValues","props","concat","handleToggle","_this$props","values","isActive","indexOf","filter","n","render","_this","_this$props2","children","process","env","NODE_ENV","createElement","map","child","_child$props","handler","cloneElement","checked","Component","UncontrolledToggleButtonGroup","Button"],"sources":["/Users/shivam./Documents/Backup/PtiWebApps/node_modules/react-fb-image-grid/node_modules/react-bootstrap/es/ToggleButtonGroup.js"],"sourcesContent":["import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime-corejs2/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport invariant from 'invariant';\nimport uncontrollable from 'uncontrollable';\nimport chainFunction from './utils/createChainedFunction';\nimport ValidChildren from './utils/ValidComponentChildren';\nimport ButtonGroup from './ButtonGroup';\nimport ToggleButton from './ToggleButton';\nvar propTypes = {\n  /**\n   * An HTML `<input>` name for each child button.\n   *\n   * __Required if `type` is set to `'radio'`__\n   */\n  name: PropTypes.string,\n\n  /**\n   * The value, or array of values, of the active (pressed) buttons\n   *\n   * @controllable onChange\n   */\n  value: PropTypes.any,\n\n  /**\n   * Callback fired when a button is pressed, depending on whether the `type`\n   * is `'radio'` or `'checkbox'`, `onChange` will be called with the value or\n   * array of active values\n   *\n   * @controllable values\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The input `type` of the rendered buttons, determines the toggle behavior\n   * of the buttons\n   */\n  type: PropTypes.oneOf(['checkbox', 'radio']).isRequired\n};\nvar defaultProps = {\n  type: 'radio'\n};\n\nvar ToggleButtonGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ToggleButtonGroup, _React$Component);\n\n  function ToggleButtonGroup() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ToggleButtonGroup.prototype;\n\n  _proto.getValues = function getValues() {\n    var value = this.props.value;\n    return value == null ? [] : [].concat(value);\n  };\n\n  _proto.handleToggle = function handleToggle(value) {\n    var _this$props = this.props,\n        type = _this$props.type,\n        onChange = _this$props.onChange;\n    var values = this.getValues();\n    var isActive = values.indexOf(value) !== -1;\n\n    if (type === 'radio') {\n      if (!isActive) {\n        onChange(value);\n      }\n\n      return;\n    }\n\n    if (isActive) {\n      onChange(values.filter(function (n) {\n        return n !== value;\n      }));\n    } else {\n      onChange(values.concat([value]));\n    }\n  };\n\n  _proto.render = function render() {\n    var _this = this;\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        type = _this$props2.type,\n        name = _this$props2.name,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"children\", \"type\", \"name\"]);\n\n    var values = this.getValues();\n    !(type !== 'radio' || !!name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'A `name` is required to group the toggle buttons when the `type` ' + 'is set to \"radio\"') : invariant(false) : void 0;\n    delete props.onChange;\n    delete props.value; // the data attribute is required b/c twbs css uses it in the selector\n\n    return React.createElement(ButtonGroup, _extends({}, props, {\n      \"data-toggle\": \"buttons\"\n    }), ValidChildren.map(children, function (child) {\n      var _child$props = child.props,\n          value = _child$props.value,\n          onChange = _child$props.onChange;\n\n      var handler = function handler() {\n        return _this.handleToggle(value);\n      };\n\n      return React.cloneElement(child, {\n        type: type,\n        name: child.name || name,\n        checked: values.indexOf(value) !== -1,\n        onChange: chainFunction(onChange, handler)\n      });\n    }));\n  };\n\n  return ToggleButtonGroup;\n}(React.Component);\n\nToggleButtonGroup.propTypes = propTypes;\nToggleButtonGroup.defaultProps = defaultProps;\nvar UncontrolledToggleButtonGroup = uncontrollable(ToggleButtonGroup, {\n  value: 'onChange'\n});\nUncontrolledToggleButtonGroup.Button = ToggleButton;\nexport default UncontrolledToggleButtonGroup;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,4CAArB;AACA,OAAOC,6BAAP,MAA0C,iEAA1C;AACA,OAAOC,cAAP,MAA2B,kDAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,cAAP,MAA2B,gBAA3B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,IAAIC,SAAS,GAAG;EACd;AACF;AACA;AACA;AACA;EACEC,IAAI,EAAET,SAAS,CAACU,MANF;;EAQd;AACF;AACA;AACA;AACA;EACEC,KAAK,EAAEX,SAAS,CAACY,GAbH;;EAed;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,QAAQ,EAAEb,SAAS,CAACc,IAtBN;;EAwBd;AACF;AACA;AACA;EACEC,IAAI,EAAEf,SAAS,CAACgB,KAAV,CAAgB,CAAC,UAAD,EAAa,OAAb,CAAhB,EAAuCC;AA5B/B,CAAhB;AA8BA,IAAIC,YAAY,GAAG;EACjBH,IAAI,EAAE;AADW,CAAnB;;AAIA,IAAII,iBAAiB,GACrB,aACA,UAAUC,gBAAV,EAA4B;EAC1BrB,cAAc,CAACoB,iBAAD,EAAoBC,gBAApB,CAAd;;EAEA,SAASD,iBAAT,GAA6B;IAC3B,OAAOC,gBAAgB,CAACC,KAAjB,CAAuB,IAAvB,EAA6BC,SAA7B,KAA2C,IAAlD;EACD;;EAED,IAAIC,MAAM,GAAGJ,iBAAiB,CAACK,SAA/B;;EAEAD,MAAM,CAACE,SAAP,GAAmB,SAASA,SAAT,GAAqB;IACtC,IAAId,KAAK,GAAG,KAAKe,KAAL,CAAWf,KAAvB;IACA,OAAOA,KAAK,IAAI,IAAT,GAAgB,EAAhB,GAAqB,GAAGgB,MAAH,CAAUhB,KAAV,CAA5B;EACD,CAHD;;EAKAY,MAAM,CAACK,YAAP,GAAsB,SAASA,YAAT,CAAsBjB,KAAtB,EAA6B;IACjD,IAAIkB,WAAW,GAAG,KAAKH,KAAvB;IAAA,IACIX,IAAI,GAAGc,WAAW,CAACd,IADvB;IAAA,IAEIF,QAAQ,GAAGgB,WAAW,CAAChB,QAF3B;IAGA,IAAIiB,MAAM,GAAG,KAAKL,SAAL,EAAb;IACA,IAAIM,QAAQ,GAAGD,MAAM,CAACE,OAAP,CAAerB,KAAf,MAA0B,CAAC,CAA1C;;IAEA,IAAII,IAAI,KAAK,OAAb,EAAsB;MACpB,IAAI,CAACgB,QAAL,EAAe;QACblB,QAAQ,CAACF,KAAD,CAAR;MACD;;MAED;IACD;;IAED,IAAIoB,QAAJ,EAAc;MACZlB,QAAQ,CAACiB,MAAM,CAACG,MAAP,CAAc,UAAUC,CAAV,EAAa;QAClC,OAAOA,CAAC,KAAKvB,KAAb;MACD,CAFQ,CAAD,CAAR;IAGD,CAJD,MAIO;MACLE,QAAQ,CAACiB,MAAM,CAACH,MAAP,CAAc,CAAChB,KAAD,CAAd,CAAD,CAAR;IACD;EACF,CAtBD;;EAwBAY,MAAM,CAACY,MAAP,GAAgB,SAASA,MAAT,GAAkB;IAChC,IAAIC,KAAK,GAAG,IAAZ;;IAEA,IAAIC,YAAY,GAAG,KAAKX,KAAxB;IAAA,IACIY,QAAQ,GAAGD,YAAY,CAACC,QAD5B;IAAA,IAEIvB,IAAI,GAAGsB,YAAY,CAACtB,IAFxB;IAAA,IAGIN,IAAI,GAAG4B,YAAY,CAAC5B,IAHxB;IAAA,IAIIiB,KAAK,GAAG5B,6BAA6B,CAACuC,YAAD,EAAe,CAAC,UAAD,EAAa,MAAb,EAAqB,MAArB,CAAf,CAJzC;;IAMA,IAAIP,MAAM,GAAG,KAAKL,SAAL,EAAb;IACA,EAAEV,IAAI,KAAK,OAAT,IAAoB,CAAC,CAACN,IAAxB,IAAgC8B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCvC,SAAS,CAAC,KAAD,EAAQ,sEAAsE,mBAA9E,CAAjD,GAAsJA,SAAS,CAAC,KAAD,CAA/L,GAAyM,KAAK,CAA9M;IACA,OAAOwB,KAAK,CAACb,QAAb;IACA,OAAOa,KAAK,CAACf,KAAb,CAZgC,CAYZ;;IAEpB,OAAOV,KAAK,CAACyC,aAAN,CAAoBpC,WAApB,EAAiCT,QAAQ,CAAC,EAAD,EAAK6B,KAAL,EAAY;MAC1D,eAAe;IAD2C,CAAZ,CAAzC,EAEHrB,aAAa,CAACsC,GAAd,CAAkBL,QAAlB,EAA4B,UAAUM,KAAV,EAAiB;MAC/C,IAAIC,YAAY,GAAGD,KAAK,CAAClB,KAAzB;MAAA,IACIf,KAAK,GAAGkC,YAAY,CAAClC,KADzB;MAAA,IAEIE,QAAQ,GAAGgC,YAAY,CAAChC,QAF5B;;MAIA,IAAIiC,OAAO,GAAG,SAASA,OAAT,GAAmB;QAC/B,OAAOV,KAAK,CAACR,YAAN,CAAmBjB,KAAnB,CAAP;MACD,CAFD;;MAIA,OAAOV,KAAK,CAAC8C,YAAN,CAAmBH,KAAnB,EAA0B;QAC/B7B,IAAI,EAAEA,IADyB;QAE/BN,IAAI,EAAEmC,KAAK,CAACnC,IAAN,IAAcA,IAFW;QAG/BuC,OAAO,EAAElB,MAAM,CAACE,OAAP,CAAerB,KAAf,MAA0B,CAAC,CAHL;QAI/BE,QAAQ,EAAET,aAAa,CAACS,QAAD,EAAWiC,OAAX;MAJQ,CAA1B,CAAP;IAMD,CAfG,CAFG,CAAP;EAkBD,CAhCD;;EAkCA,OAAO3B,iBAAP;AACD,CAzED,CAyEElB,KAAK,CAACgD,SAzER,CAFA;;AA6EA9B,iBAAiB,CAACX,SAAlB,GAA8BA,SAA9B;AACAW,iBAAiB,CAACD,YAAlB,GAAiCA,YAAjC;AACA,IAAIgC,6BAA6B,GAAG/C,cAAc,CAACgB,iBAAD,EAAoB;EACpER,KAAK,EAAE;AAD6D,CAApB,CAAlD;AAGAuC,6BAA6B,CAACC,MAA9B,GAAuC5C,YAAvC;AACA,eAAe2C,6BAAf"},"metadata":{},"sourceType":"module"}